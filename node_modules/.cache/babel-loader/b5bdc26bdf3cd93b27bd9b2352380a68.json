{"ast":null,"code":"import _toConsumableArray from \"C:\\\\xampp\\\\htdocs\\\\todo-list\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\todo-list\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\todo-list\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\todo-list\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\todo-list\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\todo-list\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\todo-list\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\xampp\\\\htdocs\\\\todo-list\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\todo-list\\\\todo-list\\\\src\\\\ToDoList.js\";\nimport React, { Component } from 'react';\nimport ListItemInput from './ListItemInput';\nimport ActiveListItems from './ActiveListItems';\nimport FinishedListItems from './FinishedListItems';\nimport './react-styles.css';\n\nvar ToDoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDoList, _Component);\n\n  function ToDoList(props) {\n    var _this;\n\n    _classCallCheck(this, ToDoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDoList).call(this, props));\n\n    _this.addItemToList = function () {\n      var currentListItem = _this.state.currentListItem;\n\n      if (currentListItem.length) {\n        _this.setState(_objectSpread({}, _this.state, {\n          currentListItem: '',\n          listItems: _toConsumableArray(_this.state.listItems).concat([currentListItem])\n        }));\n      }\n    };\n\n    _this.setCurrentToDoListItem = function (currentText) {\n      _this.setState(_objectSpread({}, _this.state, {\n        currentListItem: currentText.target.value\n      }));\n    };\n\n    _this.markItemAsFinished = function (finishedItem) {\n      var currentListItems = _this.state.listItems;\n      var indexOfFinishedItem = currentListItems.indexOf(finishedItem.toString());\n      currentListItems.splice(indexOfFinishedItem, 1);\n\n      _this.setState(_objectSpread({}, _this.state, {\n        listItems: currentListItems,\n        finishedListItems: _toConsumableArray(_this.state.finishedListItems).concat([finishedItem])\n      }));\n    };\n\n    _this.markItemAsActive = function (activeItem) {\n      var currentFinishedListItems = _this.state.finishedListItems;\n      var indexOfActiveItem = currentFinishedListItems.indexOf(activeItem.toString());\n      currentFinishedListItems.splice(indexOfActiveItem, 1);\n\n      _this.setState(_objectSpread({}, _this.state, {\n        listItems: _toConsumableArray(_this.state.listItems).concat([activeItem]),\n        finishedListItems: currentFinishedListItems\n      }));\n    };\n\n    _this.markItemAsTrash = function (trashItem) {\n      var currentFinishedListItems = _this.state.finishedListItems;\n      var indexOfTrashItem = currentFinishedListItems.indexOf(trashItem.toString());\n      currentFinishedListItems.splice(indexOfTrashItem, 1);\n\n      _this.setState(_objectSpread({}, _this.state, {\n        // listItems: [\n        //     ...this.state.listItems,\n        //     trashItem\n        // ],\n        finishedListItems: currentFinishedListItems\n      }));\n\n      console.log(\"Still Working!\");\n    };\n\n    _this.setCurrentToDoListItem = _this.setCurrentToDoListItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addItemToList = _this.addItemToList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.markItemAsFinished = _this.markItemAsFinished.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.markItemAsActive = _this.markItemAsActive.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.markItemAsTrash = _this.markItemAsTrash.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      currentListItem: '',\n      listItems: [],\n      finishedListItems: []\n    };\n    return _this;\n  }\n\n  _createClass(ToDoList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"To Do List\"), React.createElement(ListItemInput, {\n        className: \"item-input\",\n        currentInput: this.state.currentListItem,\n        onTextChange: this.setCurrentToDoListItem,\n        onSubmit: this.addItemToList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(ActiveListItems, {\n        className: \"active-items\",\n        listItems: this.state.listItems,\n        onClick: this.markItemAsFinished,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(FinishedListItems, {\n        className: \"finished-items\",\n        finishedListItems: this.state.finishedListItems,\n        onClick: this.markItemAsActive,\n        trashedItem: this.markItemAsTrash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ToDoList;\n}(Component);\n\nexport default ToDoList;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\todo-list\\todo-list\\src\\ToDoList.js"],"names":["React","Component","ListItemInput","ActiveListItems","FinishedListItems","ToDoList","props","addItemToList","currentListItem","state","length","setState","listItems","setCurrentToDoListItem","currentText","target","value","markItemAsFinished","finishedItem","currentListItems","indexOfFinishedItem","indexOf","toString","splice","finishedListItems","markItemAsActive","activeItem","currentFinishedListItems","indexOfActiveItem","markItemAsTrash","trashItem","indexOfTrashItem","console","log","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport ListItemInput from './ListItemInput';\r\nimport ActiveListItems from './ActiveListItems';\r\nimport FinishedListItems from './FinishedListItems';\r\n\r\nimport './react-styles.css';\r\n\r\nclass ToDoList extends Component {\r\n    addItemToList = () => {\r\n        const currentListItem = this.state.currentListItem;\r\n\r\n        if (currentListItem.length) {\r\n            this.setState({\r\n                ...this.state,\r\n                currentListItem: '',\r\n                listItems: [\r\n                    ...this.state.listItems,\r\n                    currentListItem\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    setCurrentToDoListItem = (currentText) => {\r\n        this.setState({\r\n            ...this.state,\r\n            currentListItem: currentText.target.value\r\n        });\r\n    };\r\n\r\n    markItemAsFinished = (finishedItem) => {\r\n        const currentListItems = this.state.listItems;\r\n        const indexOfFinishedItem = currentListItems.indexOf(finishedItem.toString());\r\n\r\n        currentListItems.splice(indexOfFinishedItem, 1);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            listItems: currentListItems,\r\n            finishedListItems: [\r\n                ...this.state.finishedListItems,\r\n                finishedItem\r\n            ]\r\n        })\r\n\r\n    };\r\n\r\n    markItemAsActive = (activeItem) => {\r\n        const currentFinishedListItems = this.state.finishedListItems;\r\n        const indexOfActiveItem = currentFinishedListItems.indexOf(activeItem.toString());\r\n\r\n        currentFinishedListItems.splice(indexOfActiveItem, 1);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            listItems: [\r\n                ...this.state.listItems,\r\n                activeItem\r\n            ],\r\n            finishedListItems: currentFinishedListItems\r\n        })\r\n    };\r\n\r\n    markItemAsTrash = (trashItem) => {\r\n        const currentFinishedListItems = this.state.finishedListItems;\r\n        const indexOfTrashItem = currentFinishedListItems.indexOf(trashItem.toString());\r\n\r\n        currentFinishedListItems.splice(indexOfTrashItem, 1);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            // listItems: [\r\n            //     ...this.state.listItems,\r\n            //     trashItem\r\n            // ],\r\n            finishedListItems: currentFinishedListItems\r\n        })\r\n        console.log(\"Still Working!\");\r\n    };\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setCurrentToDoListItem = this.setCurrentToDoListItem.bind(this);\r\n        this.addItemToList = this.addItemToList.bind(this);\r\n        this.markItemAsFinished = this.markItemAsFinished.bind(this);\r\n        this.markItemAsActive = this.markItemAsActive.bind(this);\r\n        this.markItemAsTrash = this.markItemAsTrash.bind(this);\r\n\r\n        this.state = {\r\n            currentListItem: '',\r\n            listItems: [],\r\n            finishedListItems: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"header\">\r\n                    To Do List\r\n                </h1>\r\n                <ListItemInput\r\n                    className=\"item-input\"\r\n                    currentInput={this.state.currentListItem}\r\n                    onTextChange={this.setCurrentToDoListItem}\r\n                    onSubmit={this.addItemToList}\r\n                />\r\n                <ActiveListItems\r\n                    className=\"active-items\"\r\n                    listItems={this.state.listItems}\r\n                    onClick={this.markItemAsFinished}\r\n                />\r\n                <FinishedListItems\r\n                    className=\"finished-items\"\r\n                    finishedListItems={this.state.finishedListItems}\r\n                    onClick={this.markItemAsActive}\r\n                    trashedItem={this.markItemAsTrash}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoList;\r\n"]},"metadata":{},"sourceType":"module"}